// <auto-generated />
using System;
using Arcation.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Arcation.EF.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220507124139_updateSomeFields")]
    partial class updateSomeFields
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Arcation.Core.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("BusinessId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AttendanceState")
                        .HasColumnType("bit");

                    b.Property<int>("BandLocationLeaderPeriodId")
                        .HasColumnType("int");

                    b.Property<double>("BorrowValue")
                        .HasColumnType("float");

                    b.Property<string>("BusinessId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("WorkingHours")
                        .HasColumnType("float");

                    b.Property<bool>("ended")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BandLocationLeaderPeriodId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.BLWested", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BandLocationId")
                        .HasColumnType("int");

                    b.Property<string>("BusinessId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estatement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BandLocationId");

                    b.ToTable("BLWesteds");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.Band", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Bands");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.BandLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BandId")
                        .HasColumnType("int");

                    b.Property<string>("BusinessId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BandId");

                    b.HasIndex("LocationId");

                    b.ToTable("BandLocations");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.BandLocationLeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BandId")
                        .HasColumnType("int");

                    b.Property<int>("BandLocationId")
                        .HasColumnType("int");

                    b.Property<string>("BusinessId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LeaderId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BandId");

                    b.HasIndex("BandLocationId");

                    b.HasIndex("LeaderId");

                    b.ToTable("BandLocationLeaders");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.BandLocationLeaderPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BandLocationLeaderId")
                        .HasColumnType("int");

                    b.Property<string>("BusinessId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndingDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("PayiedState")
                        .HasColumnType("bit");

                    b.Property<int>("PeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartingDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<double>("TotalBorrow")
                        .HasColumnType("float");

                    b.Property<double>("TotalDays")
                        .HasColumnType("float");

                    b.Property<double>("TotalPaied")
                        .HasColumnType("float");

                    b.Property<double>("TotalRemainder")
                        .HasColumnType("float");

                    b.Property<double>("TotalSalary")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BandLocationLeaderId");

                    b.HasIndex("PeriodId");

                    b.ToTable("BandLocationLeaderPeriods");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.BandLocationLeaderPeriodEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BandLocationLeaderPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("BusinessId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndingDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartingDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BandLocationLeaderPeriodId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("BandLocationLeaderPeriodEmployees");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.BandLocationLeaderPeriodEmployeePeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BandLocationLeaderPeriodEmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("BusinessId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndingDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("PayiedState")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartingDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<double>("TotalBorrow")
                        .HasColumnType("float");

                    b.Property<double>("TotalDays")
                        .HasColumnType("float");

                    b.Property<double>("TotalRemainder")
                        .HasColumnType("float");

                    b.Property<double>("TotalSalary")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BandLocationLeaderPeriodEmployeeId");

                    b.ToTable("BandLocationLeaderPeriodEmployeePeriods");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.BandLocationLeaderPeriodEmployeePeriodAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttendanceId")
                        .HasColumnType("int");

                    b.Property<int>("BandLocationLeaderPeriodEmployeePeriodId")
                        .HasColumnType("int");

                    b.Property<double>("BorrowValue")
                        .HasColumnType("float");

                    b.Property<string>("BusinessId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<double>("WorkingHours")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AttendanceId");

                    b.HasIndex("BandLocationLeaderPeriodEmployeePeriodId");

                    b.ToTable("BandLocationLeaderPeriodEmployeePeriodAttendances");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.Bill", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BandLocationId")
                        .HasColumnType("int");

                    b.Property<string>("BillCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BillDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BillNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("BillPrice")
                        .HasColumnType("float");

                    b.Property<string>("BusinessId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("BillId");

                    b.HasIndex("BandLocationId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusinessId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusinessId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.EmployeeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusinessId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmployeeTypes");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.Income", b =>
                {
                    b.Property<int>("IncomeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BandLocationId")
                        .HasColumnType("int");

                    b.Property<string>("BusinessId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estatement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("IncomeId");

                    b.HasIndex("BandLocationId");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.Leader", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BusinessId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passwrod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Leaders");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusinessId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndingDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LocationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LocationState")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("StartingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.Period", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BandLocationId")
                        .HasColumnType("int");

                    b.Property<string>("BusinessId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndingDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartingDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BandLocationId");

                    b.ToTable("Periods");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.Transiction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BandLocationLeaderPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("BusinessId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estatement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BandLocationLeaderPeriodId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.Wested", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BandLocationLeaderPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("BusinessId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estatement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BandLocationLeaderPeriodId");

                    b.ToTable("Westeds");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Arcation.Core.Models.ApplicationUser", b =>
                {
                    b.OwnsMany("Arcation.Core.Models.RefreshToken", "RefreshTokens", b1 =>
                        {
                            b1.Property<string>("ApplicationUserId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("CreatedOn")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("ExpiresOn")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("RevokedOn")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Token")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ApplicationUserId", "Id");

                            b1.ToTable("RefreshToken");

                            b1.WithOwner()
                                .HasForeignKey("ApplicationUserId");
                        });

                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.Attendance", b =>
                {
                    b.HasOne("Arcation.Core.Models.ArcationModels.Main.BandLocationLeaderPeriod", "BandLocationLeaderPeriod")
                        .WithMany("Attendances")
                        .HasForeignKey("BandLocationLeaderPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BandLocationLeaderPeriod");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.BLWested", b =>
                {
                    b.HasOne("Arcation.Core.Models.ArcationModels.Main.BandLocation", "BandLocation")
                        .WithMany("BLWesteds")
                        .HasForeignKey("BandLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BandLocation");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.BandLocation", b =>
                {
                    b.HasOne("Arcation.Core.Models.ArcationModels.Main.Band", "Band")
                        .WithMany("BandLocations")
                        .HasForeignKey("BandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arcation.Core.Models.ArcationModels.Main.Location", "Location")
                        .WithMany("BandLocations")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Band");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.BandLocationLeader", b =>
                {
                    b.HasOne("Arcation.Core.Models.ArcationModels.Main.Band", null)
                        .WithMany("BandLeaders")
                        .HasForeignKey("BandId");

                    b.HasOne("Arcation.Core.Models.ArcationModels.Main.BandLocation", "BandLocation")
                        .WithMany("BandLocationLeaders")
                        .HasForeignKey("BandLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arcation.Core.Models.ArcationModels.Main.Leader", "Leader")
                        .WithMany("BandLocationLeaders")
                        .HasForeignKey("LeaderId");

                    b.Navigation("BandLocation");

                    b.Navigation("Leader");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.BandLocationLeaderPeriod", b =>
                {
                    b.HasOne("Arcation.Core.Models.ArcationModels.Main.BandLocationLeader", "BandLocationLeader")
                        .WithMany("BandLocationLeaderPeriods")
                        .HasForeignKey("BandLocationLeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arcation.Core.Models.ArcationModels.Main.Period", "Period")
                        .WithMany("BandLocationLeaderPeriods")
                        .HasForeignKey("PeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BandLocationLeader");

                    b.Navigation("Period");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.BandLocationLeaderPeriodEmployee", b =>
                {
                    b.HasOne("Arcation.Core.Models.ArcationModels.Main.BandLocationLeaderPeriod", "BandLocationLeaderPeriod")
                        .WithMany("BandLocationLeaderPeriodEmployees")
                        .HasForeignKey("BandLocationLeaderPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arcation.Core.Models.ArcationModels.Main.Employee", "Employee")
                        .WithMany("BandLocationLeaderPeriodEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BandLocationLeaderPeriod");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.BandLocationLeaderPeriodEmployeePeriod", b =>
                {
                    b.HasOne("Arcation.Core.Models.ArcationModels.Main.BandLocationLeaderPeriodEmployee", "BandLocationLeaderPeriodEmployee")
                        .WithMany("BandLocationLeaderPeriodEmployeePeriods")
                        .HasForeignKey("BandLocationLeaderPeriodEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BandLocationLeaderPeriodEmployee");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.BandLocationLeaderPeriodEmployeePeriodAttendance", b =>
                {
                    b.HasOne("Arcation.Core.Models.ArcationModels.Main.Attendance", "Attendance")
                        .WithMany("BandLocationLeaderPeriodEmployeePeriodAttendances")
                        .HasForeignKey("AttendanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arcation.Core.Models.ArcationModels.Main.BandLocationLeaderPeriodEmployeePeriod", "BandLocationLeaderPeriodEmployeePeriod")
                        .WithMany("BandLocationLeaderPeriodEmployeePeriodAttendances")
                        .HasForeignKey("BandLocationLeaderPeriodEmployeePeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attendance");

                    b.Navigation("BandLocationLeaderPeriodEmployeePeriod");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.Bill", b =>
                {
                    b.HasOne("Arcation.Core.Models.ArcationModels.Main.BandLocation", "BandLocation")
                        .WithMany("Bills")
                        .HasForeignKey("BandLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BandLocation");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.Employee", b =>
                {
                    b.HasOne("Arcation.Core.Models.ArcationModels.Main.EmployeeType", "Type")
                        .WithMany("Employees")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.Income", b =>
                {
                    b.HasOne("Arcation.Core.Models.ArcationModels.Main.BandLocation", "BandLocation")
                        .WithMany("Incomes")
                        .HasForeignKey("BandLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BandLocation");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.Location", b =>
                {
                    b.HasOne("Arcation.Core.Models.ArcationModels.Main.Company", "Company")
                        .WithMany("Locations")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.Period", b =>
                {
                    b.HasOne("Arcation.Core.Models.ArcationModels.Main.BandLocation", "BandLocation")
                        .WithMany("Periods")
                        .HasForeignKey("BandLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BandLocation");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.Transiction", b =>
                {
                    b.HasOne("Arcation.Core.Models.ArcationModels.Main.BandLocationLeaderPeriod", "PeriodLeader")
                        .WithMany("Transactions")
                        .HasForeignKey("BandLocationLeaderPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PeriodLeader");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.Wested", b =>
                {
                    b.HasOne("Arcation.Core.Models.ArcationModels.Main.BandLocationLeaderPeriod", "BandLocationLeaderPeriod")
                        .WithMany("Westeds")
                        .HasForeignKey("BandLocationLeaderPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BandLocationLeaderPeriod");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Arcation.Core.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Arcation.Core.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arcation.Core.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Arcation.Core.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.Attendance", b =>
                {
                    b.Navigation("BandLocationLeaderPeriodEmployeePeriodAttendances");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.Band", b =>
                {
                    b.Navigation("BandLeaders");

                    b.Navigation("BandLocations");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.BandLocation", b =>
                {
                    b.Navigation("BandLocationLeaders");

                    b.Navigation("Bills");

                    b.Navigation("BLWesteds");

                    b.Navigation("Incomes");

                    b.Navigation("Periods");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.BandLocationLeader", b =>
                {
                    b.Navigation("BandLocationLeaderPeriods");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.BandLocationLeaderPeriod", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("BandLocationLeaderPeriodEmployees");

                    b.Navigation("Transactions");

                    b.Navigation("Westeds");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.BandLocationLeaderPeriodEmployee", b =>
                {
                    b.Navigation("BandLocationLeaderPeriodEmployeePeriods");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.BandLocationLeaderPeriodEmployeePeriod", b =>
                {
                    b.Navigation("BandLocationLeaderPeriodEmployeePeriodAttendances");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.Company", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.Employee", b =>
                {
                    b.Navigation("BandLocationLeaderPeriodEmployees");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.EmployeeType", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.Leader", b =>
                {
                    b.Navigation("BandLocationLeaders");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.Location", b =>
                {
                    b.Navigation("BandLocations");
                });

            modelBuilder.Entity("Arcation.Core.Models.ArcationModels.Main.Period", b =>
                {
                    b.Navigation("BandLocationLeaderPeriods");
                });
#pragma warning restore 612, 618
        }
    }
}
